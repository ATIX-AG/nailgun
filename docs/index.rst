NailGun
=======

NailGun is a GPL-licensed Python library that facilitates easy usage of the
Satellite 6 API.

This page provides a summary of information about NailGun. You can find more
in-depth information by visiting one of the other sections:

.. toctree::
    :maxdepth: 1

    examples
    api/index

Why NailGun?
------------

NailGun exists to make working with the Satellite 6 API easier. Here are some of
the challenges developers face:

* Existing libraries, such as the Python `Requests`_ library, are general
  purpose tools. As a result, client code can easily become excessively
  verbose. See the :doc:`examples` document for an example.
* The Satellite 6 API is not RESTful in its design. As a result, even
  experienced developers may find the API hard to work with.
* The Satellite 6 API is not consistent in its implementation. For example, see
  the "Payload Generation" section of `this blog post`_.
* The Satellite 6 API contains bugs. For example, `Foreman bug #4638`_ describes
  how it is impossible to definitively know whether a given activation key
  exists. (:meth:`nailgun.entities.ActivationKey.read_raw` contains a
  work-around.)

All of the above issues are compounded by the size of the Satellite 6 API. As of
this writing, there are 405 paths. This makes it tough to design compact and
elegant client code.

NailGun addresses these issues. NailGun is specialized, it has a consistent
design, it abstracts away many painful implementation details and it contains
workarounds for certain bugs. Why use a hammer when you can use a nail gun?

Scope and Limitations
---------------------

NailGun is not an officially supported product. NailGun is a Python-only
library, and integration with other languages such as Java or Ruby is not
currently a consideration. Although NailGun is developed with a broad audience
in mind, it targets `Robottelo`_ first and foremost.

NailGun was originally conceived as a set of helper routines internal to
`Robottelo`_. It is in the process of being extracted out from that code base
and turned in to an independently useful library.

.. WARNING:: Until version 1.0 is released, functionality will be incomplete,
    and breaking changes may be introduced. Users are advised to read the
    release notes closely.

Resources
---------

If you'd like to chat with a human, please join the #robottelo channel on the
`freenode`_ IRC network.

For in-depth examples of how to use NailGun, see the `Robottelo source code`_,
especially the `tests/foreman/api/
<https://github.com/SatelliteQE/robottelo/tree/master/tests/foreman/api>`_
directory. For a glimpse into the design of NailGun, see `this blog post`_.

For information on the internals of NailGun itself, see the :doc:`API
documentation </api/index>`.

Contributing
------------

Contributions are encouraged. The easiest way to contribute is to submit a pull
request on GitHub, but patches are welcome no matter how they arrive.

You can use pip and make to quickly set up a development environment::

    pip install -r requirements.txt -r requirements-dev.txt
    make lint
    make test
    make docs-html

Please adhere to the following guidelines:

* Lint your code with flake8 and pylint. This can be done easily by executing
  ``make lint``. The former linter must pass with zero warnings, and warnings
  from the latter linter should be minimized.
* Check for errors by running the unit test suite. This can be done easily by
  executing ``make test``. It must pass with zero errors.
* Document your code. Documentation can be easily generated by executing ``make
  docs-html``.
* Unit tests are *very* highly recommended.
* Adhere to typical commit guidelines:

    * Commits should not cause NailGun to break.
    * Commits should be small and coherent. One commit should address one issue.
    * Commits should have `good commit messages`_.
    * `Rebasing`_ is encouraged. Rebasing produces a much nicer commit history
      than merging.

* When in doubt, ask on IRC.

.. _Foreman bug #4638: http://projects.theforeman.org/issues/4638
.. _freenode: https://freenode.net/
.. _good commit messages: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html
.. _Rebasing: http://www.git-scm.com/book/en/v2/Git-Branching-Rebasing
.. _Requests: http://docs.python-requests.org/en/latest/
.. _Robottelo: http://robottelo.readthedocs.org/en/latest/
.. _Robottelo source code: https://github.com/SatelliteQE/robottelo
.. _this blog post: http://www.ichimonji10.name/blog/4/
